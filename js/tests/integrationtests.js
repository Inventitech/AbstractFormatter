module( "Integration tests" );

test('MSR Abstract from PDF', function() {
    var input = 'Code review is the manual assessment of source code by humans,\nmainly intended to identify defects and quality problems. Modern\nCode Review (MCR), a lightweight variant of the code inspections\ninvestigated since the 1970s, prevails today both in industry and\nopen-source software (OSS) systems. The objective of this paper is\nto increase our understanding of the practical benefits that the MCR\nprocess produces on reviewed source code. To that end, we empiri-\ncally explore the problems fixed through MCR in OSS systems. We\nmanually classified over 1,400 changes taking place in reviewed\ncode from two OSS projects into a validated categorization scheme.\nSurprisingly, results show that the types of changes due to the MCR\nprocess in OSS are strikingly similar to those in the industry and\nacademic systems from literature, featuring the similar 75:25 ratio\nof maintainability-related to functional problems. We also reveal\nthat 7–35% of review comments are discarded and that 10–22%\nof the changes are not triggered by an explicit review comment.\nPatterns emerged in the review data; we investigated them revealing\nthe technical factors that influence the number of changes due to the\nMCR process. We found that bug-fixing tasks lead to fewer changes\nand tasks with more altered files and a higher code churn have more\nchanges. Contrary to intuition, the person of the reviewer had no\nimpact on the number of changes.';
    var expected = 'Code review is the manual assessment of source code by humans, mainly intended to identify defects and quality problems. Modern Code Review (MCR), a lightweight variant of the code inspections investigated since the 1970s, prevails today both in industry and open-source software (OSS) systems. The objective of this paper is to increase our understanding of the practical benefits that the MCR process produces on reviewed source code. To that end, we empirically explore the problems fixed through MCR in OSS systems. We manually classified over 1,400 changes taking place in reviewed code from two OSS projects into a validated categorization scheme. Surprisingly, results show that the types of changes due to the MCR process in OSS are strikingly similar to those in the industry and academic systems from literature, featuring the similar 75:25 ratio of maintainability-related to functional problems. We also reveal that 7–35% of review comments are discarded and that 10–22% of the changes are not triggered by an explicit review comment. Patterns emerged in the review data; we investigated them revealing the technical factors that influence the number of changes due to the MCR process. We found that bug-fixing tasks lead to fewer changes and tasks with more altered files and a higher code churn have more changes. Contrary to intuition, the person of the reviewer had no impact on the number of changes.';
    equal(formatText(input), expected, 'Test on MSR Abstract (PDF)');
});
